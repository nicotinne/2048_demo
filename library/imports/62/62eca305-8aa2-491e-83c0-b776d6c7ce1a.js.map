{"version":3,"sources":["../../../../../assets/Script/Handle/assets/Script/Handle/gamePlayer.js"],"names":["Emitter","require","COLOR","cc","Class","extends","Component","properties","_handleMoveDown","_handleMoveUp","_handleMoveLeft","_handleMoveRight","_arrBlocks","gameBoard","default","type","Node","card","Prefab","_canPress","newValue","arrAnim","onLoad","systemEvent","on","SystemEvent","EventType","KEY_DOWN","handleKeyDown","createCard","randomCard","evt","keyCode","macro","KEY","up","moveUp","down","moveDown","left","moveLeft","right","moveRight","col","flatArrCard","row","handleMove","runAnimMoveCard","reverse","length","i","tween","node","call","delay","start","arrCard","hadMerge","getComponent","stringCard","checkCompare","objAnim","selfCard","otherCard","callBack","j","changeValueCards","cloneObjAnim","Object","assign","animCard","defineAnimMoveCard","undefined","push","x","y","xOld","yOld","to","position","v2","easing","instance","emit","compareNull","compareEqual","compareDifferent","contentCard","string","opacity","indexOf","oldJ","animCompareEqual","Number","reValue","arrRow","newCard","instantiate","parent","width","height","color","log","flatArray","flat","Infinity","arrNone","filter","value","index","Math","floor","random","arrRandomNum","num","action","scaleTo","runAction"],"mappings":"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","file":"gamePlayer.js","sourceRoot":"../../../../../assets/Script/Handle","sourcesContent":["const Emitter = require(\"mEmitter\");\nconst COLOR = require(\"Color\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        _handleMoveDown: null,\n        _handleMoveUp: null,\n        _handleMoveLeft: null,\n        _handleMoveRight: null,\n        _arrBlocks: [],\n        gameBoard: {\n            default: null,\n            type: cc.Node\n        },\n        card: {\n            default: null,\n            type: cc.Prefab\n        },\n        _canPress: false,\n        newValue: null,\n        arrAnim: [],\n    },\n    onLoad() {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n        this.createCard();\n        this.randomCard();\n    },\n    \n    handleKeyDown(evt) {\n        if (this._canPress) return;\n        this._canPress = true;\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n                this.moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this.moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this.moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this.moveRight();\n                break;\n            default:\n                break;\n        }\n    },\n    moveUp() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveDown() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    moveLeft() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveRight() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    runAnimMoveCard() {\n        if (this.arrAnim.length == 0) {\n            this._canPress = false;\n            return;\n        }\n        else {\n            for (let i = 0; i <= this.arrAnim.length; i++) {\n                if (i == this.arrAnim.length) {\n                    cc.tween(this.node)\n                        .call(() => {\n                            this.arrAnim = []\n                        })\n                        .delay(0.105)\n                        .call(() => {\n                            this._canPress = false;\n                            this.randomCard();\n                        })\n                        .start();\n                    return;\n                }\n                this.arrAnim[i].start();\n            }\n        }\n    },\n    handleMove(arrCard) {\n        let hadMerge = [];\n        for (let i = 1; i < arrCard.length; i++) {\n            if (arrCard[i].getComponent(\"card\").stringCard == \"\") {\n                continue;\n            }\n            let checkCompare = false;\n            let objAnim = { selfCard: null, otherCard: null, callBack: null }\n            for (let j = i - 1; j >= 0; j--) {\n                if (checkCompare == true) {\n                    j = -1;\n                    break;\n                }\n                checkCompare = this.changeValueCards(arrCard, i, j, objAnim, hadMerge);\n            }\n            let cloneObjAnim = Object.assign(objAnim);\n            let animCard = this.defineAnimMoveCard(cloneObjAnim.selfCard, cloneObjAnim.otherCard, cloneObjAnim.callBack);\n            if (animCard != undefined) {\n                this.arrAnim.push(animCard);\n            }\n        }\n    },\n    defineAnimMoveCard(selfCard, otherCard, callBack) {\n        if (selfCard != null && otherCard != null) {\n            let x = otherCard.x;\n            let y = otherCard.y;\n            let xOld = selfCard.x;\n            let yOld = selfCard.y;\n            return cc.tween(selfCard)\n                .to(0.055, { position: cc.v2(x, y) },{easing:\"sineIn\"})\n                .to(0, { position: cc.v2(xOld, yOld) })\n                .call(() => callBack(selfCard, otherCard))\n                .call(()=>{Emitter.instance.emit(\"changedValue\")})\n        }\n    },\n    changeValueCards(arrCard, i, j, objAnim, hadMerge) {\n        if (arrCard[j].getComponent(\"card\").stringCard == \"\") {\n            if( j ==0 ){\n                return this.compareNull(arrCard,i , j, objAnim);\n            }\n        }\n        else {\n            if (arrCard[j].getComponent(\"card\").stringCard == arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareEqual(arrCard,i , j, objAnim,hadMerge);\n            }\n            else if (arrCard[j].getComponent(\"card\").stringCard != arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareDifferent(arrCard,i , j, objAnim);\n            }\n        }\n    },\n    compareNull(arrCard,i , j, objAnim) {\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            selfCard.opacity = 0;\n            otherCard.opacity = 255;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        return true;\n    },\n    compareEqual(arrCard,i , j, objAnim, hadMerge) {\n        if (hadMerge.indexOf(j) != -1) {\n            let oldJ = j+1;\n            return this.compareNull(arrCard,i,oldJ,objAnim);\n        }\n        hadMerge.push(j);\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            otherCard.getComponent(\"card\").animCompareEqual();\n            otherCard.opacity = 255;\n            selfCard.opacity = 0;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = Number(objAnim.otherCard.getComponent(\"card\").stringCard) * 2 + \"\";\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        return true;\n    },\n    compareDifferent(arrCard,i , j, objAnim) {\n        let reValue = j + 1;\n        if (reValue != i) {\n            let callBack = function (selfCard, otherCard) {\n                otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n                selfCard.getComponent(\"card\").contentCard.string = \"\";\n                otherCard.opacity = 255;\n                selfCard.opacity = 0;\n            }\n            objAnim.selfCard = arrCard[i];\n            objAnim.otherCard = arrCard[reValue];\n            objAnim.callBack = callBack;\n            objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n            objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        }\n        return true;\n    },\n    createCard() {\n        for (let col = 0; col < 4; col++) {\n            let arrRow = [];\n            for (let row = 0; row < 4; row++) {\n                let x = -225 + row * 150;\n                let y = 225 - col * 150;\n                let newCard = cc.instantiate(this.card);\n                newCard.parent = this.gameBoard\n                newCard.x = x;\n                newCard.y = y;\n                newCard.width = 140;\n                newCard.height = 140;\n                newCard.opacity = 0;\n                newCard.color = COLOR[0];\n                newCard.getComponent(\"card\").stringCard = \"\";\n                cc.log( newCard.getComponent(\"card\").contentCard.string)\n                arrRow.push(newCard);\n            }\n            this._arrBlocks.push(arrRow)\n        }\n    },\n    randomCard() {\n        let flatArray = this._arrBlocks.flat(Infinity);\n        let arrNone = flatArray.filter((value) => {\n            return value.getComponent(\"card\").stringCard == \"\";\n        })\n        let index = Math.floor(Math.random() * arrNone.length)\n        let arrRandomNum = [2,4];\n        let num = arrRandomNum[Math.floor(Math.random() * arrRandomNum.length)]\n        arrNone[index].getComponent(\"card\").contentCard.string = num;\n        arrNone[index].color = COLOR[2];\n        arrNone[index].opacity = 255;\n        arrNone[index].getComponent(\"card\").stringCard = num + \"\"\n        let action = cc.scaleTo(0.3, 1);\n        arrNone[index].runAction(action);\n    },\n});\n"]}