{"version":3,"sources":["../../../../../assets/Script/Handle/assets/Script/Handle/gamePlayer.js"],"names":["Emitter","require","COLOR","cc","Class","extends","Component","properties","_handleMoveDown","_handleMoveUp","_handleMoveLeft","_handleMoveRight","_arrBlocks","gameBoard","default","type","Node","card","Prefab","_canPress","_rePlayGame","_closeGamePLayer","scoreCurrent","newValue","arrAnim","onLoad","rePlayGame","onEnable","onDisable","instance","removeEvent","systemEvent","off","SystemEvent","EventType","KEY_DOWN","handleKeyDown","closeGamePlayer","node","active","getComponent","Label","string","removeAllChildren","bind","registerEvent","on","createCard","randomCard","evt","emit","keyCode","macro","KEY","up","moveUp","down","moveDown","left","moveLeft","right","moveRight","col","flatArrCard","row","handleMove","runAnimMoveCard","reverse","length","i","tween","call","delay","start","arrCard","hadMerge","stringCard","checkCompare","objAnim","selfCard","otherCard","callBack","j","changeValueCards","cloneObjAnim","Object","assign","animCard","defineAnimMoveCard","undefined","push","x","y","xOld","yOld","to","position","v2","easing","compareNull","compareEqual","compareDifferent","contentCard","opacity","indexOf","oldJ","animCompareEqual","Number","reValue","checkGameOver","self","other","arrRow","newCard","instantiate","parent","width","height","log","check","flatArray","flat","Infinity","arrNone","filter","value","index","Math","floor","random","arrRandomNum","num","backgroundCard","color","action","scaleTo","runAction"],"mappings":"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","file":"gamePlayer.js","sourceRoot":"../../../../../assets/Script/Handle","sourcesContent":["const Emitter = require(\"mEmitter\");\nconst COLOR = require(\"Color\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        _handleMoveDown: null,\n        _handleMoveUp: null,\n        _handleMoveLeft: null,\n        _handleMoveRight: null,\n        _arrBlocks: [],\n        gameBoard: {\n            default: null,\n            type: cc.Node\n        },\n        card: {\n            default: null,\n            type: cc.Prefab\n        },\n        _canPress: false,\n        _rePlayGame:null,\n        _closeGamePLayer: null,\n        scoreCurrent:{\n            default: null,\n            type: cc.Node\n        },\n        newValue: null,\n        arrAnim: [],\n    },\n    onLoad() {\n        this.rePlayGame();\n    },\n\n    onEnable(){\n        this.rePlayGame();\n    },\n\n    onDisable(){\n        Emitter.instance.removeEvent(\"CLOSEGAMEPLAYER\",this._closeGamePLayer);\n        Emitter.instance.removeEvent(\"rePlayGame\", this._rePlayGame);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n    },\n\n    closeGamePlayer(){\n        this.node.active = false;\n    },\n\n    rePlayGame(){\n        this.scoreCurrent.getComponent(cc.Label).string = 0;\n        this.gameBoard.removeAllChildren();\n        this._arrBlocks = [];\n        this._rePlayGame = this.rePlayGame.bind(this);\n        this._closeGamePLayer = this.closeGamePlayer.bind(this);\n        Emitter.instance.registerEvent(\"CLOSEGAMEPLAYER\",this._closeGamePLayer);\n        Emitter.instance.registerEvent(\"rePlayGame\", this._rePlayGame);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n        this.createCard();\n        this.randomCard();\n    },\n\n    handleKeyDown(evt) {\n        if (this._canPress) return;\n        this._canPress = true;\n        Emitter.instance.emit(\"INPUT\");\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n                this.moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this.moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this.moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this.moveRight();\n                break;\n            default:\n                this._canPress = false;\n                break;\n        }\n    },\n    moveUp() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveDown() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    moveLeft() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveRight() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    runAnimMoveCard() {\n        if (this.arrAnim.length == 0) {\n            this._canPress = false;\n            this.randomCard(true);\n            return;\n        }\n        else {\n            for (let i = 0; i <= this.arrAnim.length; i++) {\n                if (i == this.arrAnim.length) {\n                    cc.tween(this.node)\n                        .call(() => {\n                            this.arrAnim = []\n                        })\n                        .delay(0.105)\n                        .call(() => {\n                            this._canPress = false;\n                            this.randomCard();\n                            this.randomCard(true);\n                        })\n                        .start();\n                    return;\n                }\n                this.arrAnim[i].start();\n            }\n        }\n    },\n    handleMove(arrCard) {\n        let hadMerge = [];\n        for (let i = 1; i < arrCard.length; i++) {\n            if (arrCard[i].getComponent(\"card\").stringCard == \"\") {\n                continue;\n            }\n            let checkCompare = false;\n            let objAnim = { selfCard: null, otherCard: null, callBack: null }\n            for (let j = i - 1; j >= 0; j--) {\n                if (checkCompare == true) {\n                    j = -1;\n                    break;\n                }\n                checkCompare = this.changeValueCards(arrCard, i, j, objAnim, hadMerge);\n            }\n            let cloneObjAnim = Object.assign(objAnim);\n            let animCard = this.defineAnimMoveCard(cloneObjAnim.selfCard, cloneObjAnim.otherCard, cloneObjAnim.callBack);\n            if (animCard != undefined) {\n                this.arrAnim.push(animCard);\n            }\n        }\n    },\n    defineAnimMoveCard(selfCard, otherCard, callBack) {\n        if (selfCard != null && otherCard != null) {\n            let x = otherCard.x;\n            let y = otherCard.y;\n            let xOld = selfCard.x;\n            let yOld = selfCard.y;\n            return cc.tween(selfCard)\n                .to(0.055, { position: cc.v2(x, y) }, { easing: \"sineIn\" })\n                .to(0, { position: cc.v2(xOld, yOld) })\n                .call(() => callBack(selfCard, otherCard))\n                .call(() => { Emitter.instance.emit(\"changedValue\") })\n        }\n    },\n    changeValueCards(arrCard, i, j, objAnim, hadMerge) {\n        if (arrCard[j].getComponent(\"card\").stringCard == \"\") {\n            if (j == 0) {\n                return this.compareNull(arrCard, i, j, objAnim);\n            }\n        }\n        else {\n            if (arrCard[j].getComponent(\"card\").stringCard == arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareEqual(arrCard, i, j, objAnim, hadMerge);\n            }\n            else if (arrCard[j].getComponent(\"card\").stringCard != arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareDifferent(arrCard, i, j, objAnim);\n            }\n        }\n    },\n    compareNull(arrCard, i, j, objAnim) {\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            selfCard.opacity = 0;\n            otherCard.opacity = 255;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        return true;\n    },\n    compareEqual(arrCard, i, j, objAnim, hadMerge) {\n        if (hadMerge.indexOf(j) != -1) {\n            let oldJ = j + 1;\n            return this.compareNull(arrCard, i, oldJ, objAnim);\n        }\n        hadMerge.push(j);\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            otherCard.getComponent(\"card\").animCompareEqual();\n            otherCard.opacity = 255;\n            selfCard.opacity = 0;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = Number(objAnim.otherCard.getComponent(\"card\").stringCard) * 2 + \"\";\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        Emitter.instance.emit(\"updateScore\",Number(objAnim.otherCard.getComponent(\"card\").stringCard));\n        return true;\n    },\n    compareDifferent(arrCard, i, j, objAnim) {\n        let reValue = j + 1;\n        if (reValue != i) {\n            let callBack = function (selfCard, otherCard) {\n                otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n                selfCard.getComponent(\"card\").contentCard.string = \"\";\n                otherCard.opacity = 255;\n                selfCard.opacity = 0;\n            }\n            objAnim.selfCard = arrCard[i];\n            objAnim.otherCard = arrCard[reValue];\n            objAnim.callBack = callBack;\n            objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n            objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        }\n        return true;\n    },\n\n    checkGameOver() {\n        for (let x = 0; x < 4; x++) {\n            for (let y = 0; y < 4; y++) {\n                if (x == 3) continue;\n                let self = this._arrBlocks[x][y].getComponent(\"card\").stringCard;\n                let other = this._arrBlocks[x + 1][y].getComponent(\"card\").stringCard;\n                if (self == other) {\n                    return true;\n                }\n            }\n        }\n        for (let x = 0; x < 4; x++) {\n            for (let y = 0; y < 4; y++) {\n                if (y == 3) continue;\n                let self = this._arrBlocks[x][y].getComponent(\"card\").stringCard;\n                let other = this._arrBlocks[x][y + 1].getComponent(\"card\").stringCard;\n                if (self == other) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    createCard() {\n        for (let col = 0; col < 4; col++) {\n            let arrRow = [];\n            for (let row = 0; row < 4; row++) {\n                let x = -225 + row * 150;\n                let y = 225 - col * 150;\n                let newCard = cc.instantiate(this.card);\n                newCard.parent = this.gameBoard\n                newCard.x = x;\n                newCard.y = y;\n                newCard.width = 140;\n                newCard.height = 140;\n                newCard.opacity = 0;\n                newCard.getComponent(\"card\").stringCard = \"\";\n                cc.log(newCard.getComponent(\"card\").contentCard.string)\n                arrRow.push(newCard);\n            }\n            this._arrBlocks.push(arrRow)\n        }\n    },\n    randomCard(check = false) {\n        let flatArray = this._arrBlocks.flat(Infinity);\n        let arrNone = flatArray.filter((value) => {\n            return value.getComponent(\"card\").stringCard == \"\";\n        })\n        if(arrNone.length == 0 ){\n            if (this.checkGameOver() == false) {\n                Emitter.instance.emit(\"GAMEOVER\",Number(this.scoreCurrent.getComponent(cc.Label).string));\n            }\n            return;\n        }\n        if(check) return;\n        let index = Math.floor(Math.random() * arrNone.length)\n        let arrRandomNum = [2, 4];\n        let num = arrRandomNum[Math.floor(Math.random() * arrRandomNum.length)]\n        arrNone[index].getComponent(\"card\").contentCard.string = num;\n        arrNone[index].getComponent(\"card\").backgroundCard.color = COLOR[Number(num)];\n        arrNone[index].opacity = 255;\n        arrNone[index].getComponent(\"card\").stringCard = num + \"\"\n        let action = cc.scaleTo(0.3, 1);\n        arrNone[index].runAction(action);\n    },\n});\n"]}