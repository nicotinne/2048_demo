{"version":3,"sources":["../../../../../assets/Script/Handle/assets/Script/Handle/gamePlayer.js"],"names":["Emitter","require","COLOR","cc","Class","extends","Component","properties","_handleMoveDown","_handleMoveUp","_handleMoveLeft","_handleMoveRight","_arrBlocks","gameBoard","default","type","Node","card","Prefab","_canPress","_rePlayGame","_closeGamePLayer","scoreCurrent","newValue","arrAnim","onLoad","rePlayGame","bind","closeGamePlayer","instance","registerEvent","systemEvent","on","SystemEvent","EventType","KEY_DOWN","handleKeyDown","createCard","randomCard","start","node","active","removeAllChildren","evt","emit","keyCode","macro","KEY","up","moveUp","down","moveDown","left","moveLeft","right","moveRight","col","flatArrCard","row","handleMove","runAnimMoveCard","reverse","length","i","tween","call","delay","arrCard","hadMerge","getComponent","stringCard","checkCompare","objAnim","selfCard","otherCard","callBack","j","changeValueCards","cloneObjAnim","Object","assign","animCard","defineAnimMoveCard","undefined","push","x","y","xOld","yOld","to","position","v2","easing","compareNull","compareEqual","compareDifferent","contentCard","string","opacity","indexOf","oldJ","animCompareEqual","Number","reValue","checkGameOver","self","other","arrRow","newCard","instantiate","parent","width","height","log","check","flatArray","flat","Infinity","arrNone","filter","value","Label","index","Math","floor","random","arrRandomNum","num","backgroundCard","color","action","scaleTo","runAction"],"mappings":"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","file":"gamePlayer.js","sourceRoot":"../../../../../assets/Script/Handle","sourcesContent":["const Emitter = require(\"mEmitter\");\nconst COLOR = require(\"Color\");\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        _handleMoveDown: null,\n        _handleMoveUp: null,\n        _handleMoveLeft: null,\n        _handleMoveRight: null,\n        _arrBlocks: [],\n        gameBoard: {\n            default: null,\n            type: cc.Node\n        },\n        card: {\n            default: null,\n            type: cc.Prefab\n        },\n        _canPress: false,\n        _rePlayGame:null,\n        _closeGamePLayer: null,\n        scoreCurrent:{\n            default: null,\n            type: cc.Node\n        },\n        newValue: null,\n        arrAnim: [],\n    },\n    onLoad() {\n        this._rePlayGame = this.rePlayGame.bind(this);\n        this._closeGamePLayer = this.closeGamePlayer.bind(this);\n        Emitter.instance.registerEvent(\"CLOSEGAMEPLAYER\",this._closeGamePLayer);\n        Emitter.instance.registerEvent(\"rePlayGame\", this._rePlayGame);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n        this.createCard();\n        this.randomCard();\n    },\n\n    start(){\n        this.rePlayGame();\n    },\n\n    closeGamePlayer(){\n        this.node.active = false;\n    },\n\n    rePlayGame(){\n        this.gameBoard.removeAllChildren();\n        this._arrBlocks = [];\n        this.createCard();\n        this.randomCard();\n    },\n\n    handleKeyDown(evt) {\n        if (this._canPress) return;\n        this._canPress = true;\n        Emitter.instance.emit(\"INPUT\");\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n                this.moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this.moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this.moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this.moveRight();\n                break;\n            default:\n                this._canPress = false;\n                break;\n        }\n    },\n    moveUp() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveDown() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    moveLeft() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard)\n        }\n        this.runAnimMoveCard();\n    },\n    moveRight() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handleMove(flatArrCard.reverse())\n        }\n        this.runAnimMoveCard();\n    },\n    runAnimMoveCard() {\n        if (this.arrAnim.length == 0) {\n            this._canPress = false;\n            this.randomCard(true);\n            return;\n        }\n        else {\n            for (let i = 0; i <= this.arrAnim.length; i++) {\n                if (i == this.arrAnim.length) {\n                    cc.tween(this.node)\n                        .call(() => {\n                            this.arrAnim = []\n                        })\n                        .delay(0.105)\n                        .call(() => {\n                            this._canPress = false;\n                            this.randomCard();\n                            this.randomCard(true);\n                        })\n                        .start();\n                    return;\n                }\n                this.arrAnim[i].start();\n            }\n        }\n    },\n    handleMove(arrCard) {\n        let hadMerge = [];\n        for (let i = 1; i < arrCard.length; i++) {\n            if (arrCard[i].getComponent(\"card\").stringCard == \"\") {\n                continue;\n            }\n            let checkCompare = false;\n            let objAnim = { selfCard: null, otherCard: null, callBack: null }\n            for (let j = i - 1; j >= 0; j--) {\n                if (checkCompare == true) {\n                    j = -1;\n                    break;\n                }\n                checkCompare = this.changeValueCards(arrCard, i, j, objAnim, hadMerge);\n            }\n            let cloneObjAnim = Object.assign(objAnim);\n            let animCard = this.defineAnimMoveCard(cloneObjAnim.selfCard, cloneObjAnim.otherCard, cloneObjAnim.callBack);\n            if (animCard != undefined) {\n                this.arrAnim.push(animCard);\n            }\n        }\n    },\n    defineAnimMoveCard(selfCard, otherCard, callBack) {\n        if (selfCard != null && otherCard != null) {\n            let x = otherCard.x;\n            let y = otherCard.y;\n            let xOld = selfCard.x;\n            let yOld = selfCard.y;\n            return cc.tween(selfCard)\n                .to(0.055, { position: cc.v2(x, y) }, { easing: \"sineIn\" })\n                .to(0, { position: cc.v2(xOld, yOld) })\n                .call(() => callBack(selfCard, otherCard))\n                .call(() => { Emitter.instance.emit(\"changedValue\") })\n        }\n    },\n    changeValueCards(arrCard, i, j, objAnim, hadMerge) {\n        if (arrCard[j].getComponent(\"card\").stringCard == \"\") {\n            if (j == 0) {\n                return this.compareNull(arrCard, i, j, objAnim);\n            }\n        }\n        else {\n            if (arrCard[j].getComponent(\"card\").stringCard == arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareEqual(arrCard, i, j, objAnim, hadMerge);\n            }\n            else if (arrCard[j].getComponent(\"card\").stringCard != arrCard[i].getComponent(\"card\").stringCard) {\n                return this.compareDifferent(arrCard, i, j, objAnim);\n            }\n        }\n    },\n    compareNull(arrCard, i, j, objAnim) {\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            selfCard.opacity = 0;\n            otherCard.opacity = 255;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        return true;\n    },\n    compareEqual(arrCard, i, j, objAnim, hadMerge) {\n        if (hadMerge.indexOf(j) != -1) {\n            let oldJ = j + 1;\n            return this.compareNull(arrCard, i, oldJ, objAnim);\n        }\n        hadMerge.push(j);\n        let callBack = function (selfCard, otherCard) {\n            otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n            selfCard.getComponent(\"card\").contentCard.string = \"\";\n            otherCard.getComponent(\"card\").animCompareEqual();\n            otherCard.opacity = 255;\n            selfCard.opacity = 0;\n        }\n        objAnim.selfCard = arrCard[i];\n        objAnim.otherCard = arrCard[j];\n        objAnim.callBack = callBack;\n        objAnim.otherCard.getComponent(\"card\").stringCard = Number(objAnim.otherCard.getComponent(\"card\").stringCard) * 2 + \"\";\n        objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        Emitter.instance.emit(\"updateScore\",Number(objAnim.otherCard.getComponent(\"card\").stringCard));\n        return true;\n    },\n    compareDifferent(arrCard, i, j, objAnim) {\n        let reValue = j + 1;\n        if (reValue != i) {\n            let callBack = function (selfCard, otherCard) {\n                otherCard.getComponent(\"card\").contentCard.string = otherCard.getComponent(\"card\").stringCard;\n                selfCard.getComponent(\"card\").contentCard.string = \"\";\n                otherCard.opacity = 255;\n                selfCard.opacity = 0;\n            }\n            objAnim.selfCard = arrCard[i];\n            objAnim.otherCard = arrCard[reValue];\n            objAnim.callBack = callBack;\n            objAnim.otherCard.getComponent(\"card\").stringCard = objAnim.selfCard.getComponent(\"card\").stringCard;\n            objAnim.selfCard.getComponent(\"card\").stringCard = \"\";\n        }\n        return true;\n    },\n\n    checkGameOver() {\n        for (let x = 0; x < 4; x++) {\n            for (let y = 0; y < 4; y++) {\n                if (x == 3) continue;\n                let self = this._arrBlocks[x][y].getComponent(\"card\").stringCard;\n                let other = this._arrBlocks[x + 1][y].getComponent(\"card\").stringCard;\n                if (self == other) {\n                    return true;\n                }\n            }\n        }\n        for (let x = 0; x < 4; x++) {\n            for (let y = 0; y < 4; y++) {\n                if (y == 3) continue;\n                let self = this._arrBlocks[x][y].getComponent(\"card\").stringCard;\n                let other = this._arrBlocks[x][y + 1].getComponent(\"card\").stringCard;\n                if (self == other) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    createCard() {\n        for (let col = 0; col < 4; col++) {\n            let arrRow = [];\n            for (let row = 0; row < 4; row++) {\n                let x = -225 + row * 150;\n                let y = 225 - col * 150;\n                let newCard = cc.instantiate(this.card);\n                newCard.parent = this.gameBoard\n                newCard.x = x;\n                newCard.y = y;\n                newCard.width = 140;\n                newCard.height = 140;\n                newCard.opacity = 0;\n                newCard.getComponent(\"card\").stringCard = \"\";\n                cc.log(newCard.getComponent(\"card\").contentCard.string)\n                arrRow.push(newCard);\n            }\n            this._arrBlocks.push(arrRow)\n        }\n    },\n    randomCard(check = false) {\n        let flatArray = this._arrBlocks.flat(Infinity);\n        let arrNone = flatArray.filter((value) => {\n            return value.getComponent(\"card\").stringCard == \"\";\n        })\n        if(arrNone.length == 0 ){\n            if (this.checkGameOver() == false) {\n                Emitter.instance.emit(\"GAMEOVER\",Number(this.scoreCurrent.getComponent(cc.Label).string));\n            }\n            return;\n        }\n        if(check) return;\n        let index = Math.floor(Math.random() * arrNone.length)\n        let arrRandomNum = [2, 4];\n        let num = arrRandomNum[Math.floor(Math.random() * arrRandomNum.length)]\n        arrNone[index].getComponent(\"card\").contentCard.string = num;\n        arrNone[index].getComponent(\"card\").backgroundCard.color = COLOR[Number(num)];\n        arrNone[index].opacity = 255;\n        arrNone[index].getComponent(\"card\").stringCard = num + \"\"\n        let action = cc.scaleTo(0.3, 1);\n        arrNone[index].runAction(action);\n    },\n});\n"]}