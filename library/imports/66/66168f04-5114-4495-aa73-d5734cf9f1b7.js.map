{"version":3,"sources":["../../../../../assets/Script/Handle/assets/Script/Handle/bottomMenuhandle.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","lblCurrentScore","default","type","Node","lblBestScore","_updateScore","onLoad","getComponent","Label","string","updateScore","bind","onBestScore","instance","registerEvent","start","onReplay","emit","onExitGame","number","currentScore","Number","actions","callFunc","delayTime","scale","sequence","scaleTo","runAction","spawn","repeat","data","JSON","parse","sys","localStorage","getItem","sort","a","b","parseInt","score"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,yBAAiB;AACbC,qBAAS,IADI;AAEbC,kBAAMP,GAAGQ;AAFI,SADT;AAKRC,sBAAc;AACVH,qBAAS,IADC;AAEVC,kBAAMP,GAAGQ;AAFC,SALN;AASRE,sBAAc;AATN,KAHP;;AAeLC,UAfK,oBAeI;AACL,aAAKN,eAAL,CAAqBO,YAArB,CAAkCZ,GAAGa,KAArC,EAA4CC,MAA5C,GAAqD,CAArD;AACA,aAAKJ,YAAL,GAAoB,KAAKK,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAApB;AACA,aAAKC,WAAL;AACAnB,gBAAQoB,QAAR,CAAiBC,aAAjB,CAA+B,aAA/B,EAA8C,KAAKT,YAAnD;AACH,KApBI;AAsBLU,SAtBK,mBAsBG,CACP,CAvBI;AAyBLC,YAzBK,sBAyBM;AACP,aAAKhB,eAAL,CAAqBO,YAArB,CAAkCZ,GAAGa,KAArC,EAA4CC,MAA5C,GAAqD,CAArD;AACAhB,gBAAQoB,QAAR,CAAiBI,IAAjB,CAAsB,YAAtB;AACH,KA5BI;AA8BLC,cA9BK,wBA8BQ;AACTzB,gBAAQoB,QAAR,CAAiBI,IAAjB,CAAsB,iBAAtB;AACAxB,gBAAQoB,QAAR,CAAiBI,IAAjB,CAAsB,YAAtB;AACH,KAjCI;AAmCLP,eAnCK,uBAmCOS,MAnCP,EAmCe;AAAA;;AAChB,YAAIC,eAAeC,OAAO,KAAKrB,eAAL,CAAqBO,YAArB,CAAkCZ,GAAGa,KAArC,EAA4CC,MAAnD,CAAnB;AACA,YAAIa,UAAU,CAAC3B,GAAG4B,QAAH,CAAY,YAAM;AAAEH,4BAAgB,CAAhB;AAAmB,SAAvC,CAAD,EACdzB,GAAG6B,SAAH,CAAa,IAAb,CADc,EAEd7B,GAAG4B,QAAH,CAAY,YAAM;AAAE,kBAAKvB,eAAL,CAAqBO,YAArB,CAAkCZ,GAAGa,KAArC,EAA4CC,MAA5C,GAAqDW,eAAa,EAAlE;AAAsE,SAA1F,CAFc,CAAd;AAGA,YAAIK,QAAQ9B,GAAG+B,QAAH,CAAY/B,GAAGgC,OAAH,CAAW,IAAX,EAAiB,GAAjB,CAAZ,EAAmChC,GAAGgC,OAAH,CAAW,IAAX,EAAiB,CAAjB,CAAnC,CAAZ;AACA,aAAK3B,eAAL,CAAqB4B,SAArB,CAA+BjC,GAAGkC,KAAH,CAASlC,GAAGmC,MAAH,CAAUnC,GAAG+B,QAAH,CAAYJ,OAAZ,CAAV,EAAgCH,MAAhC,CAAT,EAAkDM,KAAlD,CAA/B;AACH,KA1CI;AA4CLb,eA5CK,yBA4CS;AACV,YAAImB,OAAOC,KAAKC,KAAL,CAAWtC,GAAGuC,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAX;AACA,YAAIL,QAAQ,IAAZ,EAAkB;AACdA,mBAAOA,KAAKM,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACvB,uBAAOC,SAASD,EAAEE,KAAX,IAAoBD,SAASF,EAAEG,KAAX,CAA3B;AACH,aAFM,CAAP;AAGA,iBAAKrC,YAAL,CAAkBG,YAAlB,CAA+BZ,GAAGa,KAAlC,EAAyCC,MAAzC,GAAkDsB,KAAK,CAAL,EAAQU,KAA1D;AACH;AACJ;AApDI;;AAsDL;AAtDJ","file":"bottomMenuhandle.js","sourceRoot":"../../../../../assets/Script/Handle","sourcesContent":["const Emitter = require(\"mEmitter\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        lblCurrentScore: {\n            default: null,\n            type: cc.Node\n        },\n        lblBestScore: {\n            default: null,\n            type: cc.Node\n        },\n        _updateScore: null,\n    },\n\n    onLoad() {\n        this.lblCurrentScore.getComponent(cc.Label).string = 0;\n        this._updateScore = this.updateScore.bind(this);\n        this.onBestScore();\n        Emitter.instance.registerEvent(\"updateScore\", this._updateScore)\n    },\n\n    start() {\n    },\n\n    onReplay() {\n        this.lblCurrentScore.getComponent(cc.Label).string = 0;\n        Emitter.instance.emit(\"rePlayGame\");\n    },\n\n    onExitGame() {  \n        Emitter.instance.emit(\"CLOSEGAMEPLAYER\");\n        Emitter.instance.emit(\"LOBBYLAYER\");\n    },\n\n    updateScore(number) {\n        let currentScore = Number(this.lblCurrentScore.getComponent(cc.Label).string);\n        let actions = [cc.callFunc(() => { currentScore += 1 }),\n        cc.delayTime(0.01),\n        cc.callFunc(() => { this.lblCurrentScore.getComponent(cc.Label).string = currentScore+\"\" })];\n        let scale = cc.sequence(cc.scaleTo(0.15, 1.2), cc.scaleTo(0.15, 1))\n        this.lblCurrentScore.runAction(cc.spawn(cc.repeat(cc.sequence(actions), number), scale))\n    },\n\n    onBestScore() {\n        let data = JSON.parse(cc.sys.localStorage.getItem(\"users\"));\n        if (data != null) {\n            data = data.sort((a, b) => {\n                return parseInt(b.score) - parseInt(a.score);\n            });\n            this.lblBestScore.getComponent(cc.Label).string = data[0].score;\n        }\n    },\n\n    // update (dt) {},\n});\n"]}