{"version":3,"sources":["bottomMenuhandle.js"],"names":["Emitter","require","cc","Class","extends","Component","properties","lblCurrentScore","default","type","Node","lblBestScore","_bestScore","_updateScore","onLoad","getComponent","Label","string","onBestScore","bind","updateScore","instance","registerEvent","start","onReplay","emit","onExitGame","number","currentScore","Number","actions","callFunc","delayTime","scale","sequence","scaleTo","runAction","spawn","repeat","bestScore"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,yBAAiB;AACbC,qBAAS,IADI;AAEbC,kBAAMP,GAAGQ;AAFI,SADT;AAKRC,sBAAc;AACVH,qBAAS,IADC;AAEVC,kBAAMP,GAAGQ;AAFC,SALN;AASRE,oBAAY,IATJ;AAURC,sBAAc;AAVN,KAHP;;AAgBLC,UAhBK,oBAgBI;AACL,aAAKP,eAAL,CAAqBQ,YAArB,CAAkCb,GAAGc,KAArC,EAA4CC,MAA5C,GAAqD,CAArD;AACA,aAAKL,UAAL,GAAkB,KAAKM,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAlB;AACA,aAAKN,YAAL,GAAoB,KAAKO,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAApB;AACAnB,gBAAQqB,QAAR,CAAiBC,aAAjB,CAA+B,YAA/B,EAA6C,KAAKV,UAAlD;AACAZ,gBAAQqB,QAAR,CAAiBC,aAAjB,CAA+B,aAA/B,EAA8C,KAAKT,YAAnD;AACH,KAtBI;AAwBLU,SAxBK,mBAwBG,CACP,CAzBI;AA2BLC,YA3BK,sBA2BM;AACP,aAAKjB,eAAL,CAAqBQ,YAArB,CAAkCb,GAAGc,KAArC,EAA4CC,MAA5C,GAAqD,CAArD;AACAjB,gBAAQqB,QAAR,CAAiBI,IAAjB,CAAsB,YAAtB;AACH,KA9BI;AAgCLC,cAhCK,wBAgCQ;AACT1B,gBAAQqB,QAAR,CAAiBI,IAAjB,CAAsB,iBAAtB;AACAzB,gBAAQqB,QAAR,CAAiBI,IAAjB,CAAsB,YAAtB;AACH,KAnCI;AAqCLL,eArCK,uBAqCOO,MArCP,EAqCe;AAAA;;AAChB,YAAIC,eAAeC,OAAO,KAAKtB,eAAL,CAAqBQ,YAArB,CAAkCb,GAAGc,KAArC,EAA4CC,MAAnD,CAAnB;AACA,YAAIa,UAAU,CAAC5B,GAAG6B,QAAH,CAAY,YAAM;AAAEH,4BAAgB,CAAhB;AAAmB,SAAvC,CAAD,EACd1B,GAAG8B,SAAH,CAAa,IAAb,CADc,EAEd9B,GAAG6B,QAAH,CAAY,YAAM;AAAE,kBAAKxB,eAAL,CAAqBQ,YAArB,CAAkCb,GAAGc,KAArC,EAA4CC,MAA5C,GAAqDW,eAAa,EAAlE;AAAsE,SAA1F,CAFc,CAAd;AAGA,YAAIK,QAAQ/B,GAAGgC,QAAH,CAAYhC,GAAGiC,OAAH,CAAW,IAAX,EAAiB,GAAjB,CAAZ,EAAmCjC,GAAGiC,OAAH,CAAW,IAAX,EAAiB,CAAjB,CAAnC,CAAZ;AACA,aAAK5B,eAAL,CAAqB6B,SAArB,CAA+BlC,GAAGmC,KAAH,CAASnC,GAAGoC,MAAH,CAAUpC,GAAGgC,QAAH,CAAYJ,OAAZ,CAAV,EAAgCH,MAAhC,CAAT,EAAkDM,KAAlD,CAA/B;AACH,KA5CI;AA8CLf,eA9CK,uBA8COqB,SA9CP,EA8CkB;AACnB,aAAK5B,YAAL,CAAkBI,YAAlB,CAA+Bb,GAAGc,KAAlC,EAAyCC,MAAzC,GAAkDsB,SAAlD;AACH;AAhDI;;AAkDL;AAlDJ","file":"bottomMenuhandle.js","sourceRoot":"../../../../../assets/Script/Handle","sourcesContent":["const Emitter = require(\"mEmitter\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        lblCurrentScore: {\n            default: null,\n            type: cc.Node\n        },\n        lblBestScore: {\n            default: null,\n            type: cc.Node\n        },\n        _bestScore: null,\n        _updateScore: null,\n    },\n\n    onLoad() {\n        this.lblCurrentScore.getComponent(cc.Label).string = 0;\n        this._bestScore = this.onBestScore.bind(this);\n        this._updateScore = this.updateScore.bind(this);\n        Emitter.instance.registerEvent(\"BEST_SCORE\", this._bestScore);\n        Emitter.instance.registerEvent(\"updateScore\", this._updateScore)\n    },\n\n    start() {\n    },\n\n    onReplay() {\n        this.lblCurrentScore.getComponent(cc.Label).string = 0;\n        Emitter.instance.emit(\"rePlayGame\");\n    },\n\n    onExitGame() {  \n        Emitter.instance.emit(\"CLOSEGAMEPLAYER\");\n        Emitter.instance.emit(\"LOBBYLAYER\");\n    },\n\n    updateScore(number) {\n        let currentScore = Number(this.lblCurrentScore.getComponent(cc.Label).string);\n        let actions = [cc.callFunc(() => { currentScore += 1 }),\n        cc.delayTime(0.01),\n        cc.callFunc(() => { this.lblCurrentScore.getComponent(cc.Label).string = currentScore+\"\" })];\n        let scale = cc.sequence(cc.scaleTo(0.15, 1.2), cc.scaleTo(0.15, 1))\n        this.lblCurrentScore.runAction(cc.spawn(cc.repeat(cc.sequence(actions), number), scale))\n    },\n\n    onBestScore(bestScore) {\n        this.lblBestScore.getComponent(cc.Label).string = bestScore;\n    },\n\n    // update (dt) {},\n});\n"]}