{"version":3,"sources":["popupController.js"],"names":["emitter","require","cc","Class","extends","Component","properties","leaderBoard","Node","settingLayer","gameOver","onLoad","openLeader","onOpenLeader","bind","closeLeader","onCloseLeader","openSetting","onOpenSetting","closeSetting","onCloseSetting","openGameOver","onOpenGameOver","closeGameOver","onCloseGameOver","instance","registerEvent","start","active","emit"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,qBAAaL,GAAGM,IADR;AAERC,sBAAcP,GAAGM,IAFT;AAGRE,kBAAUR,GAAGM;AAHL,KAHP;;AASL;;AAEAG,UAXK,oBAWK;AACN,aAAKC,UAAL,GAAkB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACA,aAAKC,WAAL,GAAmB,KAAKC,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAAnB;AACA,aAAKG,WAAL,GAAmB,KAAKC,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAAnB;AACA,aAAKK,YAAL,GAAoB,KAAKC,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAApB;AACA,aAAKO,YAAL,GAAoB,KAAKC,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,CAApB;AACA,aAAKS,aAAL,GAAqB,KAAKC,eAAL,CAAqBV,IAArB,CAA0B,IAA1B,CAArB;;AAEAd,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,aAA/B,EAA8C,KAAKd,UAAnD;AACAZ,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,mBAA/B,EAAoD,KAAKX,WAAzD;AACAf,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,SAA/B,EAA0C,KAAKT,WAA/C;AACAjB,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,eAA/B,EAAgD,KAAKP,YAArD;AACAnB,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,UAA/B,EAA2C,KAAKL,YAAhD;AACArB,gBAAQyB,QAAR,CAAiBC,aAAjB,CAA+B,gBAA/B,EAAiD,KAAKH,aAAtD;AACH,KAzBI;AA2BLI,SA3BK,mBA2BI,CAER,CA7BI;AA+BLL,kBA/BK,4BA+BY;AACb,aAAKZ,QAAL,CAAckB,MAAd,GAAuB,IAAvB;AACA5B,gBAAQyB,QAAR,CAAiBI,IAAjB,CAAsB,eAAtB,EAAuC,GAAvC;AACH,KAlCI;AAoCLL,mBApCK,6BAoCa;AACd,aAAKd,QAAL,CAAckB,MAAd,GAAuB,KAAvB;AACH,KAtCI;AAwCLV,iBAxCK,2BAwCW;AACZ,aAAKT,YAAL,CAAkBmB,MAAlB,GAA2B,IAA3B;AACH,KA1CI;AA4CLR,kBA5CK,4BA4CY;AACb,aAAKX,YAAL,CAAkBmB,MAAlB,GAA2B,KAA3B;AACH,KA9CI;AAgDLf,gBAhDK,0BAgDU;AACX,aAAKN,WAAL,CAAiBqB,MAAjB,GAA0B,IAA1B;AACH,KAlDI;AAoDLZ,iBApDK,2BAoDW;AACZ,aAAKT,WAAL,CAAiBqB,MAAjB,GAA0B,KAA1B;AACH;AAtDI;;AAwDL;AAxDJ","file":"popupController.js","sourceRoot":"../../../../../assets/Script/Controller","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\nconst emitter = require(\"mEmitter\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        leaderBoard: cc.Node,\n        settingLayer: cc.Node,\n        gameOver: cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.openLeader = this.onOpenLeader.bind(this);\n        this.closeLeader = this.onCloseLeader.bind(this);\n        this.openSetting = this.onOpenSetting.bind(this);\n        this.closeSetting = this.onCloseSetting.bind(this);\n        this.openGameOver = this.onOpenGameOver.bind(this);\n        this.closeGameOver = this.onCloseGameOver.bind(this);\n\n        emitter.instance.registerEvent(\"LEADERBOARD\", this.openLeader);\n        emitter.instance.registerEvent(\"CLOSE_LEADERBOARD\", this.closeLeader);\n        emitter.instance.registerEvent(\"SETTING\", this.openSetting);\n        emitter.instance.registerEvent(\"CLOSE_SETTING\", this.closeSetting);\n        emitter.instance.registerEvent(\"GAMEOVER\", this.openGameOver);\n        emitter.instance.registerEvent(\"CLOSE_GAMEOVER\", this.closeGameOver);\n    },\n\n    start () {\n\n    },\n\n    onOpenGameOver() {\n        this.gameOver.active = true;\n        emitter.instance.emit(\"OPEN_GAMEOVER\", 100);\n    },\n\n    onCloseGameOver() {\n        this.gameOver.active = false;\n    },\n\n    onOpenSetting() {\n        this.settingLayer.active = true;\n    },\n\n    onCloseSetting() {\n        this.settingLayer.active = false;\n    },\n\n    onOpenLeader() {\n        this.leaderBoard.active = true;\n    },\n\n    onCloseLeader() {\n        this.leaderBoard.active = false;\n    },\n\n    // update (dt) {},\n});\n"]}